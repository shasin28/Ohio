/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
        
        
    vector<TreeNode*> allPossibleFBT(int n) {
        
        if(n==1)
        {
            return {new TreeNode()};
        }
     //   Node* myn=new TreeNode(0);
        vector<TreeNode*>res;
        for(int i=1;i<n-1;i+=2)
        {
            if((i)%2!=0&&(n-1-i)%2!=0)
            {
                vector<TreeNode*>lef=allPossibleFBT(i);
                vector<TreeNode*>rig=allPossibleFBT(n-1-i);   
                  for(auto u:lef)
        {
            for(auto v:rig)
            {
                  TreeNode* myn=new TreeNode();
                  myn->left=u;
                  myn->right=v;
                res.push_back(myn);
            }
        }
            }
            
        }
        
      
        
        return res;
        
    }
};
